image: docker:latest
services:
  - docker:dind

stages:
  - build
  - docker
  - docker-release
  - deploy-sandbox
  - deploy-sandbox-migration
  - deploy-fallback
  - deploy-live

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  INGEST_REGISTRY_IMAGE: ebispot/gwas-deposition-ingest
  INGEST_SERVICE_NAME: gwas-deposition-ingest

maven-build:
  image: maven:3-jdk-8
  stage: build
  script:
    - echo ${MAVEN_SETTINGS} | base64 -d > settings.xml
    - mvn -s settings.xml clean install -B -Dspring.profiles.active=test
  artifacts:
    paths:
      - target/*.jar

build-ingest-container:
  stage: docker
  script:
  - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
  - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
  - docker build --cache-from $INGEST_REGISTRY_IMAGE:latest -t $INGEST_REGISTRY_IMAGE:$CI_COMMIT_SHA .
  - docker push $INGEST_REGISTRY_IMAGE:$CI_COMMIT_SHA

build-ingest-release:
  variables:
    GIT_STRATEGY: none
  stage: docker-release
  script:
  - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
  - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
  - docker pull $INGEST_REGISTRY_IMAGE:$CI_COMMIT_SHA
  - docker tag $INGEST_REGISTRY_IMAGE:$CI_COMMIT_SHA $INGEST_REGISTRY_IMAGE:latest
  - docker tag $INGEST_REGISTRY_IMAGE:$CI_COMMIT_SHA $INGEST_REGISTRY_IMAGE:$CI_COMMIT_TAG
  - docker push $INGEST_REGISTRY_IMAGE:latest
  - docker push $INGEST_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
  - tags

deploy-ingest-sandbox:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy-sandbox
  script:
  - echo "Deploy to sandbox server"
  - mkdir -p /root/.kube
  - echo ${SANBOX_KUBECONF} | base64 -d > /root/.kube/config
  - helm init --stable-repo-url https://charts.helm.sh/stable
  - helm delete --purge gwas-ingest-service || true
  - helm install --name gwas-ingest-service --set k8Namespace=gwas,image.repository=$INGEST_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.secretsName=sandbox-secrets,image.env.secretsKey=db-backend ./k8chart/ --wait
  environment:
    name: sandbox
  only:
  - ingest-477-sandbox-migration

deploy-ingest-sandbox-migration:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy-sandbox-migration
  script:
    - echo "Deploy to sandbox server"
    - mkdir -p /root/.kube
    - echo ${PLIVE_KUBECONFIG}  | base64 -d > /root/.kube/config
    - helm init --stable-repo-url https://charts.helm.sh/stable
    - helm delete --purge gwas-ingest-service-dev || true
    - helm install --name gwas-ingest-service-dev --set k8Namespace=gwas-dev,service.name=gwas-ingest-service-dev,ingress.name=ingest-ingress-dev,image.env.envName=sandbox-migration,image.volume.claimName=gwas-dev-depo-logs,image.repository=$INGEST_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.secretsName=sandbox-secrets,image.env.secretsKey=db-backend ./k8chart/ --wait
  environment:
    name: sandbox-migration
  only:
    - develop

deploy-fallback:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy-fallback
  script:
  - echo "Deploy to Production fallback server"
  - mkdir -p /root/.kube
  - echo ${PFALLBACK_KUBECONFIG} | base64 -d > /root/.kube/config
  - helm init --stable-repo-url https://charts.helm.sh/stable
  - helm delete --purge gwas-ingest-service || true
  - helm install --name gwas-ingest-service --set k8Namespace=gwas,image.env.envName=prod,image.repository=$INGEST_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.dbUser=gwasdepo,image.env.secretsName=prod-secrets,image.env.secretsKey=db-backend ./k8chart/ --wait
  environment:
    name: prod
  only:
  - tags

deploy-live:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy-live
  script:
  - echo "Deploy to Production server"
  - mkdir -p /root/.kube
  - echo ${PLIVE_KUBECONFIG} | base64 -d > /root/.kube/config
  - helm init --stable-repo-url https://charts.helm.sh/stable
  - helm delete --purge gwas-ingest-service || true
  - helm install --name gwas-ingest-service --set k8Namespace=gwas,image.env.envName=prod,image.repository=$INGEST_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA,image.env.dbUser=gwasdepo,image.env.secretsName=prod-secrets,image.env.secretsKey=db-backend ./k8chart/ --wait
  environment:
    name: prod
  only:
  - tags
